package au.csiro.feedback.model;

// Generated 24/10/2015 11:50:16 AM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;

/**
 * FeedbackCollection generated by hbm2java
 */
@Entity
@Table(name = "feedback_collection", catalog = "userfeedback", uniqueConstraints = @UniqueConstraint(columnNames = "latest_feedback"))
public class FeedbackCollection implements java.io.Serializable {

	private Integer collectionId;
	private FeedbackItem feedbackItem;
	private String targetAdditionalInfo;
	private int numberOfFeedbacks;
	private String identifier;
	private Date collectionCreated;
	private Set<FeedbackItem> feedbackItems = new HashSet<FeedbackItem>(0);
	private Set<FeedbackcollectionTarget> feedbackcollectionTargets = new HashSet<FeedbackcollectionTarget>(0);

	public FeedbackCollection() {
	}

	public FeedbackCollection(int numberOfFeedbacks, Date collectionCreated) {
		this.numberOfFeedbacks = numberOfFeedbacks;
		this.collectionCreated = collectionCreated;
	}

	public FeedbackCollection(FeedbackItem feedbackItem, String targetAdditionalInfo, int numberOfFeedbacks,
			String identifier, Date collectionCreated, Set<FeedbackItem> feedbackItems,
			Set<FeedbackcollectionTarget> feedbackcollectionTargets) {
		this.feedbackItem = feedbackItem;
		this.targetAdditionalInfo = targetAdditionalInfo;
		this.numberOfFeedbacks = numberOfFeedbacks;
		this.identifier = identifier;
		this.collectionCreated = collectionCreated;
		this.feedbackItems = feedbackItems;
		this.feedbackcollectionTargets = feedbackcollectionTargets;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "collection_id", unique = true, nullable = false)
	public Integer getCollectionId() {
		return this.collectionId;
	}

	public void setCollectionId(Integer collectionId) {
		this.collectionId = collectionId;
	}

	@Cascade({CascadeType.ALL})
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "latest_feedback", unique = true)
	public FeedbackItem getFeedbackItem() {
		return this.feedbackItem;
	}

	public void setFeedbackItem(FeedbackItem feedbackItem) {
		this.feedbackItem = feedbackItem;
	}

	@Column(name = "target_additional_info", length = 200)
	public String getTargetAdditionalInfo() {
		return this.targetAdditionalInfo;
	}

	public void setTargetAdditionalInfo(String targetAdditionalInfo) {
		this.targetAdditionalInfo = targetAdditionalInfo;
	}

	@Column(name = "number_of_feedbacks", nullable = false)
	public int getNumberOfFeedbacks() {
		return this.numberOfFeedbacks;
	}

	public void setNumberOfFeedbacks(int numberOfFeedbacks) {
		this.numberOfFeedbacks = numberOfFeedbacks;
	}

	@Column(name = "identifier", length = 150)
	public String getIdentifier() {
		return this.identifier;
	}

	public void setIdentifier(String identifier) {
		this.identifier = identifier;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "collection_created", nullable = false, length = 19)
	public Date getCollectionCreated() {
		return this.collectionCreated;
	}

	public void setCollectionCreated(Date collectionCreated) {
		this.collectionCreated = collectionCreated;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "feedbackCollection")
	public Set<FeedbackItem> getFeedbackItems() {
		return this.feedbackItems;
	}

	public void setFeedbackItems(Set<FeedbackItem> feedbackItems) {
		this.feedbackItems = feedbackItems;
	}

	@Cascade({CascadeType.ALL})
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "feedbackCollection")
	public Set<FeedbackcollectionTarget> getFeedbackcollectionTargets() {
		return this.feedbackcollectionTargets;
	}

	public void setFeedbackcollectionTargets(Set<FeedbackcollectionTarget> feedbackcollectionTargets) {
		this.feedbackcollectionTargets = feedbackcollectionTargets;
	}

}
